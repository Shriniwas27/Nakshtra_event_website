// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model user{
  id Int @id @default(autoincrement())
  username String 
  email String @unique
  password String
  isverified Boolean @default(false)
  verificationtoken String?
  Registration Registration[]
  createdAt DateTime @default(now())
}

model Event{
  id Int @id @default(autoincrement())
  name String
  description String
  price Int
  image String?
  admin Admin @relation(fields: [adminId], references: [id])
  adminId Int
  Registration Registration[] 
  Images Image[] 
  eventEnded Boolean
  createdAt DateTime @default(now())
}

model Registration{
  id Int @id @default(autoincrement())
  eventId Int
  userId Int
  netvotes Int
  imagecount Int
  createdAt DateTime @default(now())
  razorpay_payment_id String
  razorpay_order_id String
  payment_status String
  Image Image[] 
  event Event @relation(fields: [eventId], references: [id] , onDelete: Cascade) 
  user user @relation(fields: [userId], references: [id] , onDelete: Cascade)
}

model Image{
  id Int @id @default(autoincrement())
  url String
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int 
  Registration Registration @relation(fields: [RegistrationId], references: [id] , onDelete: Cascade)
  RegistrationId Int
  votes Int @default(0)
  voterecord String[]
}

model Admin{
  id Int @id @default(autoincrement())
  username String 
  email String @unique
  password String
  Event Event[]
  createdAt DateTime @default(now())
}





